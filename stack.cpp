#include <iostream> // cin, out
#include <conio.h>  // _getch()
#include <stdlib.h> // поддержка функции очистки экрана system("cls")
#include <clocale>  // поддержка русского языка
using namespace std;

class stack
{
private:
	int top; // вершина стека
	int s[10]; // массив в котором хранится стек
public:
	stack (): top(0) // конструктор без параметров
	{}
	void push(int var); //функция для проталкивания элемента
	int pop(); // функция для выталкивания элемента
	int empty(); // функция проверки опустошения стека
	int full(); // функция проверки переполнения стека
};

void stack::push(int var){ // добавление элемента в конец стека
	if (full()){ // Проверка на переполнение стека
		top++;			// увеличиваем вершину стека
		s[top] = var;	// добавляем элемент в новую вершину стека
	}
	// если стек переполнен метод не работает
}
int stack::pop(){ // убираем последний элемент из стека
	if (empty()){ // проверка на опустошение стека
		int var = s[top]; // берем элемент с вершины стека
		top--;	// уменьшаем вершину стека
		return var; // возвращаем элемент с вершины стека
	}
	else{return 0;} // если стек опустошен возвращаем 0
}
int stack::empty(){ // проверка на опустошение стека
	if (top <= 0){ // если вершина меньше или равна 0 то стек считается пустым
		cout << "stack is empty" << " ";
		return 0; // если стек опустошен то возвращаем 0
	}
	else {return 1;} // если все хорошо возвращаем 1
}
int stack::full(){
	if (top >= 9){ // если вершина больше или ровна 9 то стек считается переполненым
		cout << "stack is full" << "\n"; 
		return 0; // если стек переполнен то возвращаем 0
	}
	else {return 1;} // если все хорошо возвращаем 1
}

void main(){
	setlocale(LC_CTYPE,"Russian"); // установка русского языка
	stack stack1; // создаем объект класса - стек1

	int i = 0;
	while (i < 5){
		stack1.push(i); // проталкиваем элементы в стек
		i++;
	}

	int j = 0;
	while (j < 5){
		cout << stack1.pop() << "\n"; // выталкиваем элементы из стека
		j++;
	}
	cout << "putin" << "\n";
	system("pause");
};